name: CMake
run-name: ${{ github.actor }} is building the project ðŸš€

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
#  workflow_run:
#    workflows: [dependency]
#    types:
#      - success


env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  install_dependency:
    # The installation commands are not platform agnostic and should not work well on Windows or Mac.
    runs-on: ubuntu-latest
    steps:
      - name: Update apt
        run: sudo apt update
      - name: Install Eigen3
        run: sudo apt install -y libeigen3-dev
      - name: Check Eigen3 installation
        run: ls /usr/include/eigen3

  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    needs: [install_dependency]

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -DEIGEN3_INCLUDE_DIR=/usr/include/eigen3

#    - name: Test
#      working-directory: ${{github.workspace}}/build
#      # Execute tests defined by the CMake configuration.
#      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#      run: ctest -C ${{env.BUILD_TYPE}}

